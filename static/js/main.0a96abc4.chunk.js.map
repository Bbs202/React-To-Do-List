{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","Component/todo-list.jsx","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","styles","width","fontSize","fontFamily","styles2","display","margin","style3","fontWeight","style4","ToDoList","props","handleSubmit","itemArray","state","input","split","alert","setState","toDoList","handleChange","bind","handleReset","handleClear","event","this","target","value","items","map","item","length","style","className","onChange","placeholder","onClick","listItem","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,I,YCwBAA,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,2CCNRQ,EAAS,CACXC,MAAO,IACPC,SAAU,GACVC,WAAY,WAGVC,EAAU,CACZC,QAAS,QACTF,WAAY,UACZD,SAAU,GACVI,OAAQ,GAENC,EAAS,CACXN,MAAO,IACPE,WAAY,YACZK,WAAY,KAEVC,EAAS,CACXP,SAAU,GACVC,WAAY,WAiFDO,E,kDA3EX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAkBVC,aAAe,WACZ,IAAMC,EAAY,EAAKC,MAAMC,MAAMC,MAAM,KAEzC,MAAwB,KAArB,EAAKF,MAAMC,MACFE,MAAM,iCAIb,EAAKC,SAAS,CACVH,MAAO,GACPI,SAAUN,KA3BlB,EAAKC,MAAQ,CACTC,MAAO,GACPI,SAAS,IAKjB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAEpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBAZD,E,gDAclB,SAAaG,GACTC,KAAKP,SAAS,CACVH,MAAOS,EAAME,OAAOC,U,yBAmB5B,WAEIF,KAAKP,SAAS,CACVC,SAFM,O,yBAKd,SAAYK,GACRC,KAAKP,SAAS,CACVH,MAAO,O,sBAIf,WACI,IAAIa,EAAOH,KAAKX,MAAMK,SAASU,KAAI,SAAAC,GAAI,OAAE,6BAAKA,OAC/C,OAAkC,IAA/BL,KAAKX,MAAMK,SAASY,OAAsB,KAEtC,oBAAIC,MAAO5B,EAAS6B,UAAU,6BAA9B,SAA4DL,M,oBAItE,WAEI,OAAS,+BAAM,gCAEX,oBAAII,MAAOzB,EAAQ0B,UAAU,qDAA7B,2BACA,oBAAIA,UAAU,SAEd,0BAAUD,MAAOhC,EAAQiC,UAAW,sDAAsDN,MAAOF,KAAKX,MAAMC,MAAOmB,SAAUT,KAAKL,aAAce,YAAY,wBAC5J,wBAAQH,MAAOvB,EAAQwB,UAAU,wBAAwBG,QAASX,KAAKb,aAAvE,oBACA,wBAAQoB,MAAOvB,EAAQwB,UAAW,kBAAmBG,QAASX,KAAKH,YAAnE,mBACA,uBACA,oBAAIW,UAAU,SACgB,IAA7BR,KAAKX,MAAMK,SAASY,QAAc,oBAAIC,MAAO,CAACxB,WAAY,KAAMyB,UAAW,MAAzC,uCAClCR,KAAKY,WACL,wBAAQL,MAAOvB,EAAQwB,UAAW,sBAAsBG,QAASX,KAAKF,YAAtE,4B,GAtEUe,IAAMC,WCjB7BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BrD,M","file":"static/js/main.0a96abc4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react';\r\nconst styles = {\r\n    width: 350,\r\n    fontSize: 12,\r\n    fontFamily: \"cursive\"\r\n    \r\n};\r\nconst styles2 = {\r\n    display: \"block\",\r\n    fontFamily: \"cursive\",\r\n    fontSize: 12,\r\n    margin: 2   \r\n}\r\nconst style3 = {\r\n    width: 350,\r\n    fontFamily: \"monospace\",\r\n    fontWeight: 700\r\n}\r\nconst style4 = {\r\n    fontSize: 13,\r\n    fontFamily: \"cursive\"\r\n}\r\nconst style5 = {\r\n    backgroundColor: \"skyblue\"\r\n}\r\nclass ToDoList extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            input: \"\",\r\n            toDoList:[]\r\n        }\r\n       \r\n\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    //this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleReset = this.handleReset.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            input: event.target.value\r\n        });\r\n    };\r\n    handleSubmit = () => {\r\n       const itemArray = this.state.input.split(',');\r\n      \r\n       if(this.state.input === \"\"){\r\n           return (alert(\"Enter what do you want to do!\"))\r\n       }\r\n       else{\r\n           return(\r\n            this.setState({\r\n                input: \"\",\r\n                toDoList: itemArray\r\n            })\r\n           )\r\n       }\r\n       \r\n    };\r\n    handleClear() {\r\n        let items=[];\r\n        this.setState({\r\n            toDoList: items\r\n        })\r\n    }\r\n    handleReset(event) {\r\n        this.setState({\r\n            input: \"\"\r\n        })\r\n    }\r\n\r\n    listItem(){\r\n        let items= this.state.toDoList.map(item=><li>{item}</li>)\r\n       if(this.state.toDoList.length === 0) {return null}\r\n       else{\r\n       return <ol style={styles2} className=\"list-group-item active m-2\">{items}</ol>\r\n       }\r\n    }\r\n       \r\n    render() { \r\n       \r\n        return  (<body><div>\r\n           \r\n            <h1 style={style3} className=\"navbar navbar-expand-lg navbar-light bg-white ml-2\">My-To-Do-List</h1>\r\n            <hr className=\"mt-5\"/>\r\n            \r\n            <textarea style={styles} className={\"md-textarea form-control form-control z-depth-1 m-2\"}value={this.state.input} onChange={this.handleChange} placeholder=\"separate with comma\" />\r\n            <button style={style4} className=\"btn btn-secondary m-2\" onClick={this.handleSubmit}>Submit</button>\r\n            <button style={style4} className={\"btn btn-primary\"} onClick={this.handleReset}>Reset</button>\r\n            <br />\r\n            <hr className=\"mt-5\"/>\r\n            {this.state.toDoList.length===0 && <h3 style={{fontWeight: 700}} className={\"m-2\"}>What will you like to do?</h3>}\r\n            {this.listItem()}\r\n             <button style={style4} className={\"btn btn-primary m-2\"}onClick={this.handleClear}>Clear</button>\r\n        </div>\r\n        </body>);\r\n    }\r\n}\r\n \r\nexport default ToDoList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport ToDoList from './Component/todo-list';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToDoList  />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}